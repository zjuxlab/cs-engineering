"use strict";(self.webpackChunkcs_engineering=self.webpackChunkcs_engineering||[]).push([[1904],{11140:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>_,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var t=i(58168),r=(i(96540),i(15680));const o={title:"\u5b57\u7b26\u8bbe\u5907",slug:"\u5b57\u7b26\u8bbe\u5907",sidebar_position:0},l="\u5b57\u7b26\u8bbe\u5907",c={unversionedId:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907",id:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907",title:"\u5b57\u7b26\u8bbe\u5907",description:"Author\uff1a\u9a6c\u5bff\u7965",source:"@site/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907.md",sourceDirName:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907",slug:"/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907",permalink:"/cs-engineering/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907/\u5b57\u7b26\u8bbe\u5907.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"\u5b57\u7b26\u8bbe\u5907",slug:"\u5b57\u7b26\u8bbe\u5907",sidebar_position:0},sidebar:"sidebar",previous:{title:"\u6587\u4ef6\u4e0e\u8bbe\u5907",permalink:"/cs-engineering/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u6587\u4ef6\u4e0e\u8bbe\u5907/\u6587\u4ef6\u4e0e\u8bbe\u5907"},next:{title:"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b",permalink:"/cs-engineering/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u57fa\u7840\u5165\u95e8/\u57fa\u7840\u8bfe\u7a0b/\u64cd\u4f5c\u7cfb\u7edf/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"}},d={},a=[{value:"\u4ec0\u4e48\u662f\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f",id:"\u4ec0\u4e48\u662f\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f",level:2},{value:"\u8bbe\u5907\u9a71\u52a8\u8c03\u7528\u8fc7\u7a0b",id:"\u8bbe\u5907\u9a71\u52a8\u8c03\u7528\u8fc7\u7a0b",level:2},{value:"\u5b57\u7b26\u8bbe\u5907\u3001\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb",id:"\u5b57\u7b26\u8bbe\u5907\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb",level:2},{value:"Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7f16\u5199",id:"linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7f16\u5199",level:2},{value:"\u5b57\u7b26\u9a71\u52a8\u7a0b\u5e8f\u793a\u4f8b",id:"\u5b57\u7b26\u9a71\u52a8\u7a0b\u5e8f\u793a\u4f8b",level:2},{value:"\u4ee3\u7801\uff1a",id:"\u4ee3\u7801",level:3},{value:"\u5185\u6838\uff1a",id:"\u5185\u6838",level:4},{value:"Makefile\u6587\u4ef6\uff1a",id:"makefile\u6587\u4ef6",level:5},{value:"\u7528\u6237\u6001\uff1a",id:"\u7528\u6237\u6001",level:4},{value:"Makefile \u6587\u4ef6\uff1a",id:"makefile-\u6587\u4ef6",level:5},{value:"\u8fd0\u884c\u7ed3\u679c\uff1a",id:"\u8fd0\u884c\u7ed3\u679c",level:5}],u={toc:a},s="wrapper";function _(e){let{components:n,...o}=e;return(0,r.yg)(s,(0,t.A)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u5b57\u7b26\u8bbe\u5907"},"\u5b57\u7b26\u8bbe\u5907"),(0,r.yg)("p",null,"Author\uff1a\u9a6c\u5bff\u7965"),(0,r.yg)("h1",{id:"\u4ec0\u4e48\u662f\u5b57\u7b26\u8bbe\u5907"},"\u4ec0\u4e48\u662f\u5b57\u7b26\u8bbe\u5907"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"\u5b57\u7b26\u8bbe\u5907\u662f\u6307\u5728I/O\u4f20\u8f93\u8fc7\u7a0b\u4e2d",(0,r.yg)("inlineCode",{parentName:"p"},"\u4ee5\u5b57\u7b26\u4e3a\u5355\u4f4d"),"\u8fdb\u884c\u4f20\u8f93\u7684\u8bbe\u5907\uff0c\u4f8b\u5982\u952e\u76d8\uff0c\u6253\u5370\u673a\u7b49\u3002\u5728UNIX\u7cfb\u7edf\u4e2d\uff0c\u5b57\u7b26\u8bbe\u5907\u4ee5\u7279\u522b\u6587\u4ef6\u65b9\u5f0f\u5728\u6587\u4ef6\u76ee\u5f55\u6811\u4e2d\u5360\u636e\u4f4d\u7f6e\u5e76\u62e5\u6709\u76f8\u5e94\u7684\u7ed3\u70b9\u3002\n\u5b57\u7b26\u8bbe\u5907\u53ef\u4ee5\u4f7f\u7528\u4e0e\u666e\u901a\u6587\u4ef6\u76f8\u540c\u7684\u6587\u4ef6\u64cd\u4f5c\u547d\u4ee4\u5bf9\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u6253\u5f00\u3001\u5173\u95ed\u3001\u8bfb\u3001\u5199\u7b49\u3002")),(0,r.yg)("h1",{id:"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4ee5linux\u4e3a\u4f8b"},"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\uff08\u4ee5Linux\u4e3a\u4f8b\uff09"),(0,r.yg)("div",{class:"callout callout-bg-2 callout-border-2"},(0,r.yg)("div",{class:"callout-emoji"},"\ud83d\udca1"),(0,r.yg)("p",null,"\u9a71\u52a8\u7a0b\u5e8f\u7684\u5f00\u53d1\u53ef\u53c2\u8003",(0,r.yg)("a",{href:"wikcnaWHaGcfJuXKq29b7VoozGf"},"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8")," \uff0c\u5f00\u59cb\u5199\u624d\u53d1\u73b0\u786c\u4ef6\u7684\u6210\u5458\u5df2\u7ecf\u6574\u7406\u7684\u6bd4\u8f83\u8be6\u7ec6\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u8fd9\u4e2a\u3002")),(0,r.yg)("h2",{id:"\u4ec0\u4e48\u662f\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f"},"\u4ec0\u4e48\u662f\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f"),(0,r.yg)("p",null,"\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5b9e\u9645\u8bbe\u5907\u7684\u8f6f\u4ef6\u5c42\uff0c\u662fLinux\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u662f\u67d0\u4e2a\u7279\u5b9a\u786c\u4ef6\u54cd\u5e94\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u5185\u90e8\u7f16\u7a0b\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u5b8c\u5168\u9690\u85cf\u8bbe\u5907\u7684\u5de5\u4f5c\u7ec6\u8282\u3002"),(0,r.yg)("p",null,"\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5904\u7406\u5982\u4f55\u4f7f\u786c\u4ef6\u53ef\u7528\u7684\u95ee\u9898\uff0c\u800c\u5c06\u5982\u4f55\u4f7f\u7528\u786c\u4ef6\u7559\u7ed9\u4e0a\u5c42\u5e94\u7528\u7a0b\u5e8f\u3002\u4e5f\u5c31\u662f\u8bf4\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u673a\u5236\uff0c\u4e0d\u63d0\u4f9b\u7b56\u7565\u3002"),(0,r.yg)("p",null,"\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u662fLinux\u4e2d\u7684\u4e00\u4e2a\u53ef\u88c5\u8f7d\u6a21\u5757\u3002\n\u6269\u5c55\uff1a\u53ef\u88c5\u8f7d\u6a21\u5757\uff1a\nLinux\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u7279\u6027\uff1a\u5185\u6838\u63d0\u4f9b\u7684\u7279\u6027\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u6269\u5c55\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53\u7cfb\u7edf\u542f\u52a8\u5e76\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5411\u5185\u6838\u6dfb\u52a0\u529f\u80fd(\u6216\u79fb\u9664\u529f\u80fd)\u3002\n\u53ef\u5728\u8fd0\u884c\u65f6\u6dfb\u52a0\u5230\u5185\u6838\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u201c\u6a21\u5757\u201d\u3002Linux\u5185\u6838\u652f\u6301\u591a\u79cd\u6a21\u5757\u7c7b\u578b\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3002\u6bcf\u4e2a\u6a21\u5757\u7531\u76ee\u6807\u4ee3\u7801\u7ec4\u6210(\u6ca1\u6709\u8fde\u63a5\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u6267\u884c\u7a0b\u5e8f)\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"insmod  \u6a21\u5757\u540d\n\u5c06\u6a21\u5757\u8fde\u63a5\u5230\u6b63\u5728\u8fd0\u884c\u7684\u5185\u6838"),(0,r.yg)("li",{parentName:"ul"},"rmmod  \u6a21\u5757\u540d\n\u5c06\u6a21\u5757\u79fb\u9664")),(0,r.yg)("p",null,"\u53ef\u88c5\u8f7d\u6a21\u5757\u6e90\u4ee3\u7801\u7684\u57fa\u672c\u7ec4\u6210\u5982\u4e0b\uff1a"),(0,r.yg)("h2",{id:"\u8bbe\u5907\u9a71\u52a8\u8c03\u7528\u8fc7\u7a0b"},"\u8bbe\u5907\u9a71\u52a8\u8c03\u7528\u8fc7\u7a0b"),(0,r.yg)("p",null,"\u9488\u5bf9\u4e0d\u540c\u7684\u8bbe\u5907\u7c7b\u522b\uff0c\u7528\u6237\u7a7a\u95f4\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u8c03\u7528\u5230\u4e0d\u540c\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ece\u800c\u63a7\u5236\u786c\u4ef6\u8bbe\u5907\u3002"),(0,r.yg)("p",null,"Linux\u64cd\u4f5c\u7cfb\u7edf\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5404\u8bbe\u5907\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff1a"),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(91420).A,width:"744",height:"589"})),(0,r.yg)("h2",{id:"\u5b57\u7b26\u8bbe\u5907\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb"},"\u5b57\u7b26\u8bbe\u5907\u3001\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb"),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(13234).A,width:"1344",height:"530"})),(0,r.yg)("p",null,"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5728Linux\u5185\u6838\u4e2d\u4f7f\u7528cdev\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u901a\u8fc7\u5176\u6210\u5458dev_t\u6765\u5b9a\u4e49\u8bbe\u5907\u53f7(\u5206\u4e3a\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7)\u4ee5\u786e\u5b9a\u5b57\u7b26\u8bbe\u5907\u7684\u552f\u4e00\u6027\u3002\u901a\u8fc7\u5176\u6210\u5458file_operations\u6765\u5b9a\u4e49\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u7ed9VFS\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u5982\u5e38\u89c1\u7684open()\u3001read()\u3001write()\u7b49\u3002"),(0,r.yg)("p",null,"\u5728Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u901a\u8fc7register_chrdev_region() \u6216alloc_chrdev_region()\u6765\u9759\u6001\u6216\u8005\u52a8\u6001\u83b7\u53d6\u8bbe\u5907\u53f7\uff0c\u901a\u8fc7cdev_init()\u5efa\u7acbcdev\u4e0efile_operations\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u901a\u8fc7cdev_add()\u5411\u7cfb\u7edf\u6dfb\u52a0\u4e00\u4e2acdev\u4ee5\u5b8c\u6210\u6ce8\u518c\u3002\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u901a\u8fc7cdev_del()\u6765\u6ce8\u9500cdev\uff0c\u901a\u8fc7unregister_chrdev_region()\u6765\u91ca\u653e\u8bbe\u5907\u53f7\u3002"),(0,r.yg)("p",null,"\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u901a\u8fc7Linux\u7cfb\u7edf\u8c03\u7528\uff0c\u5982open()\u3001read()\u3001write()\uff0c\u6765\u201c\u8c03\u7528\u201dfile_operations\u6765\u5b9a\u4e49\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u7ed9VFS\u7684\u63a5\u53e3\u51fd\u6570\u3002"),(0,r.yg)("h2",{id:"linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7f16\u5199"},"Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7f16\u5199"),(0,r.yg)("p",null,"Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7f16\u5199\u4e3b\u8981\u9700\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\uff1a"),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(32886).A,width:"1171",height:"800"})),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u5206\u914dcdev\n\u5728Linux\u5185\u6838\u4e2d\u4f7f\u7528cdev\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u5728\u9a71\u52a8\u4e2d\u5206\u914dcdev,\u4e3b\u8981\u662f\u5206\u914d\u4e00\u4e2acdev\u7ed3\u6784\u4f53\u4e0e\u7533\u8bf7\u8bbe\u5907\u53f7",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"- \u5206\u914d\u7ed3\u6784\u4f53\n```c\n")),"struct cdev cdev_name;")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"    - \u7533\u8bf7\u8bbe\u5907\u53f7\n    \u8bbe\u5907\u53f7\u6709\u4e3b\u6b21\u4e4b\u5206\uff0c\u5728Linux\u4e2d\u4ee5\u4e3b\u8bbe\u5907\u597d\u8868\u793a\u4e0e\u8bbe\u5907\u6587\u4ef6\u76f8\u8fde\u63a5\u7684\u9a71\u52a8\u3002\u6b21\u8bbe\u5907\u53f7\u7528\u6765\u9a71\u52a8\u64cd\u4f5c\u7684\u662f\u54ea\u4e00\u4e2a\u8bbe\u5907\u3002\u7533\u8bf7\u8bbe\u5907\u53f7\u5b58\u5728\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u9759\u6001\u7533\u8bf7\uff0c\u4e5f\u5c31\u662f\u8bf4\u624b\u52a8\u627e\u5230\u4e00\u4e2a\u8fd8\u672a\u4f7f\u7528\u7684\u4e3b\u8bbe\u5907\u53f7\uff0c\u7136\u540e\u751f\u6210\u8bbe\u5907\u53f7\uff0c\u5e76\u6ce8\u518c\u3002\u53e6\u4e00\u79cd\u662f\u52a8\u6001\u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u7136\u540e\u4ece\u8bbe\u5907\u53f7\u4e2d\u83b7\u53d6\u4e3b\u8bbe\u5907\u53f7\uff0c\u6ce8\u518c\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3002\u4e24\u79cd\u65b9\u5f0f\u5206\u522b\u5982\u4e0b\uff1a\n    - \u9759\u6001\u7533\u8bf7\u8bbe\u5907\u53f7\uff1a\n        ```c\ndev_id  = MKDEV(major,0);\nregister_chrdev_region(dev_id,1,\u201ddevice_name\u201d);\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"- \u52a8\u6001\u7533\u8bf7\u8bbe\u5907\u53f7\uff1a\n    ```c\n")),(0,r.yg)("p",null,"alloc_chardev_region(&dev_id,0,1,\u201ddevice_name\u201d);\nmajor = MAJOR(dev_id);"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\n2. \u521d\u59cb\u5316cdev\n\nvoid cdev_init(struct cdev* ,struct file_operations *);\n\ncdev_init()\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316cdev\u7684\u6210\u5458\uff0c\u5e76\u5efa\u7acbcdev\u548cfile_oprations\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\n\n1. \u6ce8\u518ccdev\n\nint cdev_add(struct cdev *\uff0cdev_t\uff0cunsigned);\n\ncdev_add()\u51fd\u6570\u5411\u7cfb\u7edf\u6dfb\u52a0\u4e00\u4e2acdev\uff0c\u5b8c\u6210\u5b57\u7b26\u8bbe\u5907\u7684\u6ce8\u518c\u3002\n\n1. \u5b9e\u73b0\u8bbe\u5907\u64cd\u4f5c\n\n\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u4ee5\u8bbf\u95ee\u6587\u4ef6\u7684\u5f62\u5f0f\u8bbf\u95ee\u5b57\u7b26\u8bbe\u5907\uff0c\u901a\u5e38\u8fdb\u884copen\uff0cread\uff0cwrite\uff0cclose\u7b49\u7cfb\u7edf\u8c03\u7528\u3002\u800c\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u6700\u7ec8\u8c03\u7528\u7684\u662ffile_operations\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002\u5b83\u4eec\u662f\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u5185\u6838\u7684\u63a5\u53e3\u3002\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u4f1a\u8c03\u7528\u5230\u7ed3\u6784\u4f53\u91cd\u5bf9\u5e94\u540d\u79f0\u7684\u6210\u5458\u51fd\u6570\u3002\n\n```c\nstatic struct file_operaions fops_name = {\n    .owner = THIS_MODULE,\n    .open  = open_name,\n    .close = close_name,\n     \u2026\n}\n")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u6ce8\u9500\u9a71\u52a8")),(0,r.yg)("p",null,"\u5f53\u4f7f\u7528rmmod\u547d\u4ee4\u65f6\uff0c\u4f1a\u8c03\u7528\u9a71\u52a8\u7684\u9000\u51fa\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4e2d\u9700\u8981\u5b8c\u6210\u5728\u6e05\u7406\u6ce8\u518c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u5220\u9664\u5b57\u7b26\u8bbe\u5907\uff0c\u91ca\u653e\u8bbe\u5907\u53f7\u7b49\u3002"),(0,r.yg)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u521d\u59cb\u5316\u51fd\u6570\u4e0e\u9000\u51fa\u51fd\u6570\u662f\u4e00\u4e2a\u53cd\u5411\u64cd\u4f5c\u3002\u5728\u521d\u59cb\u5316\u4f7f\u7528\u7684\u8d44\u6e90\u5fc5\u987b\u5728\u9000\u51fa\u51fd\u6570\u4e2d\u91ca\u653e\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u5220\u9664\u5b57\u7b26\u8bbe\u5907",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"```c\n")),"void cdev_del(struct cdev *);")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\n- \u91ca\u653e\u8bbe\u5907\u53f7\n    ```c\nvoid unregister_chrdev_region(dev_t from, unsigned count);\n")),(0,r.yg)("h2",{id:"\u5b57\u7b26\u9a71\u52a8\u7a0b\u5e8f\u793a\u4f8b"},"\u5b57\u7b26\u9a71\u52a8\u7a0b\u5e8f\u793a\u4f8b"),(0,r.yg)("div",{class:"callout callout-bg-2 callout-border-2"},(0,r.yg)("div",{class:"callout-emoji"},"\ud83d\udca1"),(0,r.yg)("p",null,"\u4e0b\u9762\u662f\u6211\u4e00\u95e8\u8bfe\u7a0b\u7684\u4f5c\u4e1a\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003")),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(18886).A,width:"557",height:"740"})),(0,r.yg)("p",null,"\u8981\u6c42\uff1a\u4f7f\u7528\u6811\u8393\u6d3e\u548c\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u6a21\u5757\uff0c\u5b9e\u73b0\u8d85\u58f0\u6ce2\u6d4b\u8ddd\u3002"),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(19602).A,width:"729",height:"434"})),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801\uff1a"),(0,r.yg)("h4",{id:"\u5185\u6838"},"\u5185\u6838\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#include <linux/init.h>\n#include <linux/module.h>\n#include <linux/device.h>\n#include <linux/gpio.h>\n#include <linux/interrupt.h>\n#include <linux/cdev.h>\n#include <linux/ioctl.h>\n#include <linux/fs.h>\n#include <asm/uaccess.h>\n#include <linux/uaccess.h>\n#include <linux/delay.h>\n#include <linux/time.h>\n#define DRIVER_NAME "Demo"\n#define DEVICE_NAME "Demo"\n\nstatic dev_t demo_devno; //\u8bbe\u5907\u53f7\nstatic struct class *demo_class;\nstatic struct cdev demo_dev;\n\nstatic struct gpio_config{\n    int trig_num;\n    int echo_num;\n}config;\n\nstruct times {\n    struct timeval begin_time;\n    struct timeval end_time;\n}t;\n\nstatic int flag = 0;\n\n//open \u51fd\u6570\uff0c\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528open\u7cfb\u7edf\u8c03\u7528\u65f6\u4f1a\u8c03\u7528\u672c\u51fd\u6570\nstatic int demo_open(struct inode *inode,struct file *filp)\n{\n    printk(KERN_INFO"Demo open\\n");\n    return 0;\n\n}\n\n//release \u51fd\u6570\uff0c\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528close\u7cfb\u7edf\u8c03\u7528\u65f6\u4f1a\u8c03\u7528\u672c\u51fd\u6570\nstatic int demo_release(struct inode *inode, struct file *filp)\n{   \n    if(flag){\n        free_irq(gpio_to_irq(config.trig_num),NULL);\n        gpio_free(config.trig_num);\n        gpio_free(config.echo_num);\n        flag = 0;\n    }\n\n    printk(KERN_INFO"Demo release\\n");\n    return 0;\n}\nstatic long demo_read(struct file *filp, char __user *buf, size_t count, loff_t *offset)\n{\n    int ret = 0;\n\n    printk("enter demo_read!\\n");\n    \n    gpio_set_value(config.trig_num,1);\n    udelay(22);\n    gpio_set_value(config.trig_num,0);\n\n    //Wait until echo is high\n    while(gpio_get_value(config.echo_num)==0){\n        continue;\n    }\n    //get start time\n    do_gettimeofday(&t.begin_time);\n    printk("echo start!, time is : %ld s %ld us \\n",t.begin_time.tv_sec, t.begin_time.tv_usec);\n    //Wait until echo is \n    while(gpio_get_value(config.echo_num)==1){\n        continue;\n    }\n    \n    //get end time\n    do_gettimeofday(&t.end_time);\n    printk("echo end! time is : %ld s %ld us \\n",t.end_time.tv_sec, t.end_time.tv_usec);\n    \n    ret = copy_to_user((void *)buf, &t, count);\n\n    return ret;\n}\n\n//ioctl \u63a7\u5236\u51fd\u6570\uff0c\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528ioctl\u7cfb\u7edf\u8c03\u7528\u65f6\u4f1a\u8c03\u7528\u672c\u51fd\u6570\nstatic long demo_ioctl(struct file *filp,unsigned int cmd,unsigned long arg)\n{\n    int err = 0;\n    switch(cmd){\n        case 0://0 \u8868\u793a\u547d\u4ee4\u53f7\uff0c\u4e00\u822c\u90fd\u7528\u5b8f\u5b9a\u4e49\u6765\u63a7\u5236\n            {\n                if(copy_from_user(&config,(void *)arg,sizeof(struct gpio_config))){ //\u4ece\u7528\u6237\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u914d\u7f6e\u6570\u636e\n                    printk(KERN_ERR"[%s %d] : copy_from user failed !\\n",__func__,__LINE__);\n                    return -EFAULT;\n                }\n                printk(KERN_INFO"[%s %d]: Get trig gpio num: %d and echo gpio num: %d\\n ",__func__,__LINE__,config.trig_num,config.echo_num);\n                err = gpio_request_one(config.echo_num,GPIOF_IN,"Light Button");\n                if(err){\n                    printk(KERN_ERR"[%s %d]:Request echo gpio failed\\n",__func__,__LINE__);\n                    return -EFAULT;\n                }\n                err = gpio_request_one(config.trig_num,GPIOF_OUT_INIT_LOW,"LED light");\n                if(err){\n                    printk(KERN_ERR"[%s %d]:Request trig gpio failed\\n",__func__,__LINE__);\n                    gpio_free(config.trig_num);\n                }\n\n                break;\n            }\n        default:\n            printk(KERN_INFO"[%s %d]:Invalid cmd", __func__,__LINE__);\n            break;\n    }\n    return 0;\n}\n\nstatic struct file_operations demo_fops = {\n    .owner = THIS_MODULE,\n    .open  = demo_open,\n    .release  = demo_release,\n    .unlocked_ioctl = demo_ioctl,\n    .read = demo_read,\n};\n\nstatic int __init demo_init(void)\n{\n    int err;\n\n    printk(KERN_INFO"Demo Init \\n");\n\n    err = alloc_chrdev_region(&demo_devno,0,1,DRIVER_NAME);   \n    if(err < 0){\n        goto err;\n    }\n    cdev_init(&demo_dev,&demo_fops);\n\n    err = cdev_add(&demo_dev,demo_devno,1);\n\n    if(err < 0)\n    {\n        printk(KERN_ERR"[%s,%d]add cdev failed\\n",__func__,__LINE__);\n        goto FREE_DEVNO;\n    }\n    //\u81ea\u52a8\u751f\u6210\u8bbe\u5907\u6587\u4ef6 \u5728/dev\u76ee\u5f55\u4e0b\uff0c\u6587\u4ef6\u540d\u4e3aDEVICE_NAME\n    demo_class = class_create(THIS_MODULE,DEVICE_NAME);\n    if(IS_ERR(demo_class))\n    {\n        printk(KERN_ERR"[%s,%d]class create failed\\n",__func__,__LINE__);\n        goto DEV_FREE;\n    }\n    device_create(demo_class,NULL,demo_devno,NULL,DEVICE_NAME);\n\n    return 0;\nDEV_FREE:\n    cdev_del(&demo_dev);\nFREE_DEVNO:\n    unregister_chrdev_region(demo_devno, 1);\nerr:\n    return err;\n}\n\nstatic void demo_exit(void)\n{\n    if(flag){\n        free_irq(gpio_to_irq(config.trig_num),NULL);\n        gpio_free(config.trig_num);\n        gpio_free(config.echo_num);\n    }\n    device_destroy(demo_class,demo_devno);\n    class_destroy(demo_class);\n    cdev_del(&demo_dev);\n    unregister_chrdev_region(demo_devno, 1);\n    printk(KERN_INFO"Demo exit\\n");\n}\n\nmodule_init(demo_init);\nmodule_exit(demo_exit);\nMODULE_AUTHOR("hyg");\nMODULE_DESCRIPTION("BUTTON LED Driver");\nMODULE_LICENSE("GPL");\n')),(0,r.yg)("h5",{id:"makefile\u6587\u4ef6"},"Makefile\u6587\u4ef6\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-makefile"},"ARCH=arm64\n\nCROSS_COMPILE=/home/yixin/Pi/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-\n\nifneq ($(KERNELRELEASE),)\n    obj-m := demo.o\nelse\n    KERNELDIR:=/home/yixin/Pi/linux\n    #KERNELDIR:=/src/ras/linux/\n    PWD := $(shell pwd)\ndefault:\n    $(MAKE) CROSS_COMPILE=$(CROSS_COMPILE) ARCH=$(ARCH) -C $(KERNELDIR) M=$(PWD) modules\nclean:\n    rm -rf *.o *.ko *.mod.c *.order *.symvers   \nendif\n")),(0,r.yg)("h4",{id:"\u7528\u6237\u6001"},"\u7528\u6237\u6001\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-makefile"},'#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/ioctl.h>\n#include <sys/time.h>\n#include <sys/ioctl.h>\n#include <errno.h>\n#include <fcntl.h>\n\nstruct gpio_config\n{\n    int trig_num;\n    int echo_num;\n};\n\nstruct times {\n    struct timeval begin_time;\n    struct timeval end_time;\n};\n\nint main(int argc, char **argv)\n{\n    int fd;\n    struct gpio_config config;\n    struct times t;\n    config.trig_num = 2;\n    config.echo_num = 3;\n\n    fd = open("/dev/Demo", O_RDWR);\n    if (fd < 0) {\n        perror("/dev/Demo");\n        exit(0);\n    }\n\n    //init gpio pin\n    ioctl(fd, 0, &config);\n\n    while(1){\n        long read_ok=read(fd, &t, sizeof(t));\n        //printf("read state :%ld\\n",read_ok);\n        double distance = ((t.end_time.tv_sec-t.begin_time.tv_sec)+(t.end_time.tv_usec-t.begin_time.tv_usec)/1000000.0)*340.0/2.0;\n        printf("the start time is : %ld s %ld us \\n",t.begin_time.tv_sec,t.begin_time.tv_usec);\n        printf("the end time is : %ld s %ld us \\n",t.end_time.tv_sec,t.end_time.tv_usec);\n        printf("the distance is : %f m \\n",distance);\n        sleep(1);\n    }\n\n    close(fd);\n    return 0;\n}\n')),(0,r.yg)("h5",{id:"makefile-\u6587\u4ef6"},"Makefile \u6587\u4ef6\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-makefile"},"CC = /home/yixin/Pi/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc\n\n\nall: demo\n\ndemo: demo.o\n    $(CC) -o $@ $^ -static\n\nclean:\n    -rm *.o $(all)\n")),(0,r.yg)("h5",{id:"\u8fd0\u884c\u7ed3\u679c"},"\u8fd0\u884c\u7ed3\u679c\uff1a"),(0,r.yg)("p",null,(0,r.yg)("img",{src:i(57162).A,width:"855",height:"811"})),(0,r.yg)("h1",{id:"\u7ed3\u8bed"},"\u7ed3\u8bed"),(0,r.yg)("p",null,"\u6216\u8bb8\u8fd9\u4e2a\u5185\u5bb9\u7531\u786c\u4ef6\u7684\u6210\u5458\u6765\u5199\u66f4\u597d\uff09"),(0,r.yg)("p",null,"\u8fd9\u6b21\u4e3b\u8981\u662f\u642c\u8fd0\u4e86\u300a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u300b\u7684\u4f5c\u4e1a\uff0c\u6709\u758f\u6f0f\u4e4b\u5904\u6b22\u8fce\u8865\u5145\u4fee\u6539\u3002"))}_.isMDXComponent=!0},13234:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/RA4vbt0gNoYZ6yxAqATcjdoznCb-ae71faad83c173a959e017cf912d6692.png"},15680:(e,n,i)=>{i.d(n,{xA:()=>u,yg:()=>m});var t=i(96540);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function c(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var d=t.createContext({}),a=function(e){var n=t.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},u=function(e){var n=a(e.components);return t.createElement(d.Provider,{value:n},e.children)},s="mdxType",_={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=a(i),g=r,m=s["".concat(d,".").concat(g)]||s[g]||_[g]||o;return i?t.createElement(m,l(l({ref:n},u),{},{components:i})):t.createElement(m,l({ref:n},u))}));function m(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=i.length,l=new Array(o);l[0]=g;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[s]="string"==typeof e?e:r,l[1]=c;for(var a=2;a<o;a++)l[a]=i[a];return t.createElement.apply(null,l)}return t.createElement.apply(null,i)}g.displayName="MDXCreateElement"},18886:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/JtMnblw2AoSIbcxDb8Fc6hN3nfb-dc04d06a0b29bc889f6e39ef56ef7f54.png"},19602:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/FfuEbJsAYoXBE9xy157cmRqFnwe-4dd60f98048da7c34d7b5cab01e26699.png"},32886:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/SQyabPWbboVNXexhG4rcJWC8n1W-73fad3d6cef96ce6d41081e1fac0167e.png"},57162:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Az6lbXgX0oL6VVxTj99c8bvHnWb-878386b627d4d01fd34e8a2aa5e05f59.png"},91420:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/NXWNbxT1Aob2ehx0CabcPapenEh-2c771e982ad18a23db96abfeaabd9c56.png"}}]);