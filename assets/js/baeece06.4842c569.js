"use strict";(self.webpackChunkcs_engineering=self.webpackChunkcs_engineering||[]).push([[3944],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>d});var a=t(96540);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),s=u(t),m=l,d=s["".concat(p,".").concat(m)]||s[m]||y[m]||r;return t?a.createElement(d,i(i({ref:n},g),{},{components:t})):a.createElement(d,i({ref:n},g))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[s]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},63923:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=t(58168),l=(t(96540),t(15680));const r={title:"\u8d1f\u8f7d\u5747\u8861\u5668",slug:"\u8d1f\u8f7d\u5747\u8861\u5668",sidebar_position:1},i="\u8d1f\u8f7d\u5747\u8861\u5668",o={unversionedId:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668",id:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668",title:"\u8d1f\u8f7d\u5747\u8861\u5668",description:"Author\uff1aNA",source:"@site/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668.md",sourceDirName:"\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668",slug:"/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668",permalink:"/cs-engineering/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/\u8d1f\u8f7d\u5747\u8861\u5668/\u8d1f\u8f7d\u5747\u8861\u5668.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u8d1f\u8f7d\u5747\u8861\u5668",slug:"\u8d1f\u8f7d\u5747\u8861\u5668",sidebar_position:1},sidebar:"sidebar",previous:{title:"NGINX",permalink:"/cs-engineering/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u8d1f\u8f7d\u5747\u8861/NGINX/NGINX"},next:{title:"\u5e94\u7528\u670d\u52a1",permalink:"/cs-engineering/\u8f6f\u4ef6\u5de5\u7a0b\u6280\u80fd\u6811/\u8fd0\u8425\u7ef4\u62a4/\u5e94\u7528\u670d\u52a1/\u5e94\u7528\u670d\u52a1"}},p={},u=[{value:"Building a go program with RESTful template",id:"building-a-go-program-with-restful-template",level:2},{value:"The main part of a proxy",id:"the-main-part-of-a-proxy",level:2},{value:"Hash",id:"hash",level:2},{value:"Naive performance test",id:"naive-performance-test",level:2},{value:"Perfing",id:"perfing",level:2},{value:"\u6d4b\u8bd5:",id:"\u6d4b\u8bd5",level:3},{value:"System side",id:"system-side",level:2},{value:"Runtime perf",id:"runtime-perf",level:2},{value:"CoreDump",id:"coredump",level:2},{value:"<code>io</code>: Streaming Reader",id:"io-streaming-reader",level:2},{value:"<code>io.Copy()</code>",id:"iocopy",level:3},{value:"TODOS",id:"todos",level:2}],g={toc:u},s="wrapper";function y(e){let{components:n,...t}=e;return(0,l.yg)(s,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"\u8d1f\u8f7d\u5747\u8861\u5668"},"\u8d1f\u8f7d\u5747\u8861\u5668"),(0,l.yg)("p",null,"Author\uff1aNA"),(0,l.yg)("p",null,"\u56e0\u4e3a\u6f6e\u4e1a\u52a1\u624b\u6413\u7684\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u4e3b\u8981\u5305\u62ec\u4e86nginx\u65e5\u5fd7\u76d1\u63a7\u3001perf\u76d1\u63a7\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u529f\u80fd\u3002"),(0,l.yg)("p",null,"\u8fdb\u884c\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u538b\u6d4b\uff0c\u5de5\u5177\u548c\u8fc7\u7a0b\u4e5f\u653e\u5728\u91cc\u9762\u3002"),(0,l.yg)("p",null,"repo\uff1a"),(0,l.yg)("p",null,"follow me from\uff1a"),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://t.me/+5IH64rSM3AVmN2M1"},"https://t.me/+5IH64rSM3AVmN2M1")),(0,l.yg)("h1",{id:"developing-in-golang"},"Developing in ",(0,l.yg)("inlineCode",{parentName:"h1"},"golang")),(0,l.yg)("p",null,"Some tricky topics involved:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Multithread and stubborn queue control."),(0,l.yg)("li",{parentName:"ul"},"Build a stubborn performance test and ",(0,l.yg)("inlineCode",{parentName:"li"},"goroutine")," leak test."),(0,l.yg)("li",{parentName:"ul"},"Why you should close file description in each channel.")),(0,l.yg)("h2",{id:"building-a-go-program-with-restful-template"},"Building a go program with RESTful template"),(0,l.yg)("p",null,"Reusable code:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"RESTful router."),(0,l.yg)("li",{parentName:"ul"},"Definition and Handler of object.")),(0,l.yg)("p",null,"more."),(0,l.yg)("p",null,"You may want to define and expose RESTful apis along with the definition of objects. And build the template of project."),(0,l.yg)("h2",{id:"the-main-part-of-a-proxy"},"The main part of a proxy"),(0,l.yg)("p",null,"Code."),(0,l.yg)("p",null,"Tricky:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Be sure to Close each side when the other side sends EOF."),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"Achieve with defer."),(0,l.yg)("li",{parentName:"ul"},"Never Close unopened connection."))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"<","aside",">"," \ud83d\udc49 Set defer to close right after establishing. Be careful with \u201cClosing not opened.\u201d")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"<","/aside",">")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Recycle resources."),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"No forever hang connection and ",(0,l.yg)("inlineCode",{parentName:"li"},"goroutine")," leak: Closing each side and timeout."),(0,l.yg)("li",{parentName:"ul"},"No global variable creation. All local variables are released to ensure no memory leak."))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Display readable error message when fault occurs."))),(0,l.yg)("h1",{id:"random-and-hash"},"Random and Hash"),(0,l.yg)("p",null,"Topic about load balancing? Which is better?"),(0,l.yg)("p",null,"Random"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"Intn()")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"rand()")," % ? Why \u201cNot equal possibility\u201d?"),(0,l.yg)("h2",{id:"hash"},"Hash"),(0,l.yg)("p",null,"Rand and Hash."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Rand mechanism. Possibility distribution.")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Easy hash is ",(0,l.yg)("inlineCode",{parentName:"p"},"mod"),". Length may affect performance. Sparse would cause waste."),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"Sparse cost for hash?"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Weighted distribution."))),(0,l.yg)("h1",{id:"prometheus-metrics"},"Prometheus Metrics"),(0,l.yg)("p",null,"To enable monitoring, I need to expose this as prometheus metrics."),(0,l.yg)("h1",{id:"automatic-basic-test"},"Automatic basic test"),(0,l.yg)("p",null,"How do you compose a automatic tester? Not just inside golang itself. You may want to build a integrated test and run by itself."),(0,l.yg)("h1",{id:"promotion-to-be-a-c10k"},"Promotion to be a c10k"),(0,l.yg)("h1",{id:"build-test"},"Build test"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Memory use. Channel use."),(0,l.yg)("li",{parentName:"ul"},"Response time."),(0,l.yg)("li",{parentName:"ul"},"Overloading performance.")),(0,l.yg)("h1",{id:"perfing-golang"},"Perfing Golang"),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://www.cnblogs.com/landv/p/11274877.html"},"[golang]7\u79cd Go \u7a0b\u5e8f\u6027\u80fd\u5206\u6790\u65b9\u6cd5")),(0,l.yg)("p",null,"Go Executable runs in many layers of environments:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Operating system: OS."),(0,l.yg)("li",{parentName:"ul"},"go runtime.")),(0,l.yg)("p",null,"With these, you can glean some useful statistics:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Time: /usr/bin/time"),(0,l.yg)("li",{parentName:"ul"},"fd: File descriptor"),(0,l.yg)("li",{parentName:"ul"},"IO and net work."),(0,l.yg)("li",{parentName:"ul"},"GC behavior."),(0,l.yg)("li",{parentName:"ul"},"Memory."),(0,l.yg)("li",{parentName:"ul"},"CPU time hotspot.")),(0,l.yg)("p",null,"How do you gather these statistics?"),(0,l.yg)("p",null,"\u21d2 Build a generic perf render."),(0,l.yg)("h2",{id:"naive-performance-test"},"Naive performance test"),(0,l.yg)("p",null,"To avoid networking bottleneck, test local io loopback bandwidth with ",(0,l.yg)("inlineCode",{parentName:"p"},"iperf")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"iperf3 -s 15999\niperf3 -c 127.0.0.1 15999\n")),(0,l.yg)("p",null,"Watch the traffic on network interface with ",(0,l.yg)("inlineCode",{parentName:"p"},"iftop")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"sudo iftop -i lo -nN\n")),(0,l.yg)("p",null,"Get performance."),(0,l.yg)("p",null,"Easily get:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"iftop")," has shown exact band rate with ",(0,l.yg)("inlineCode",{parentName:"li"},"iperf3"),"."),(0,l.yg)("li",{parentName:"ul"},"With huge ",(0,l.yg)("inlineCode",{parentName:"li"},"io")," , CPU cores are busy with sending packages. The bottleneck for ",(0,l.yg)("inlineCode",{parentName:"li"},"lo")," is cpu now. \ud83d\ude05 \u2026ok.")),(0,l.yg)("p",null,"\u60f3\u60f3\u5728\u4e00\u53f0\u865a\u62df\u673a\u4e0a\u81ea\u5df1\u5bf9\u81ea\u5df1\u538b\u6d4b\u6709\u70b9\u8822\uff0c\u66f4\u6362\u4e24\u53f0\u7269\u7406\u673a\u6d4b\u8bd5\ud83d\ude26"),(0,l.yg)("h2",{id:"perfing"},"Perfing"),(0,l.yg)("p",null,"\u9884\u6d4b\u8bd5\uff1a"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"\u4e0d\u7ecf\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u3002"),(0,l.yg)("li",{parentName:"ul"},"\u5de6\u4fa7\u4e3asrv2\uff0c\u5305\u542b\u5f85\u6d4b\u670d\u52a1\uff1b"),(0,l.yg)("li",{parentName:"ul"},"\u53f3\u4fa7\u4e3asrv1\uff0c\u4e3a\u538b\u6d4b\u673a\uff0c\u542b\u6709\u6d4b\u8bd5\u7a0b\u5e8fab\u3001\u53d7\u6d4b\u4ee3\u7406\u7684\u8bbf\u95ee\u76ee\u6807nginx\u3002")),(0,l.yg)("p",null,"\u7b26\u5408\u9884\u671f\uff0c\u673a\u5668\u662f\u7531\u767e\u5146\u4ea4\u6362\u673a\u8fde\u63a5\u7684\u3002"),(0,l.yg)("p",null,"To take a glimpse at the performance, ",(0,l.yg)("inlineCode",{parentName:"p"},"ab")," from apache-utils comes in handy."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"sudo apt-get install apache2-utils\n")),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://httpd.apache.org/docs/2.4/programs/ab.html"},"ab - Apache HTTP server benchmarking tool")),(0,l.yg)("p",null,"For io pressure is considered dangerous for linux, some mechanism would limit the rate. Some options to be tuned:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"ulimit 20000"),(0,l.yg)("li",{parentName:"ul"},"net.ipv4.tcp_syncookies = 0")),(0,l.yg)("p",null,"\u55ef\uff0c\u6700\u540e\u50cf\u6a21\u50cf\u6837\u5730\u8dd1\u4e86\u4e2a\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8d1f\u8f7d\u5b8c\u5168\u4e0d\u5728io\u4e0a\uff0c\u5728cpu\u4e0a\uff08"),(0,l.yg)("h3",{id:"\u6d4b\u8bd5"},"\u6d4b\u8bd5:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"\u73af\u5883\u540c\u4e0a\u3002\u4ece\u7565")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'sudo ab -c 1000 -n 10000 -H "ip.zjuqsc.com" -H "X-Egress-Scheme: http" \\\\\n        -H "X-Egress-Host: 172.20.216.100:80" -r <http://10.76.8.19:18999/>\n')),(0,l.yg)("p",null,"\u9759\u7f6e\u673a\u5668\uff1a"),(0,l.yg)("p",null,"\u8fd0\u884c\u5230\u4e2d\u6bb5\u7a33\u5b9a\u72b6\u6001\uff1a"),(0,l.yg)("p",null,"\u6d4b\u8bd5\u7ed3\u675f\uff1a"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"\u8d1f\u8f7d\u60c5\u51b5\uff1a"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"\u4e1a\u52a1\u673acpu\u8dd1\u6ee1\u3002\u6682\u65f6\u672a\u77e5\u4e3a\u5565\u8fd9\u4e48\u5403U\uff1b"),(0,l.yg)("li",{parentName:"ul"},"\u6d4b\u8bd5\u673a\u548c\u4e1a\u52a1\u673a\u4e4b\u95f4\u7684io\u6ca1\u6709\u6ee1\uff0c\u4e0d\u662f\u74f6\u9888\uff1b"),(0,l.yg)("li",{parentName:"ul"},"\u6d4b\u8bd5\u673a\u672c\u8eab\u7684core\u6ca1\u6709\u8dd1\u6ee1\uff0c\u74f6\u9888\u4e0d\u5728nginx\u7ec8\u7aef\u670d\u52a1\u4e0a\u3002"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"\u8d44\u6e90\u6d88\u8017\uff1a"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"\u770b\u4e86\u4e00\u4e0b\u4e1a\u52a1\u7684memory\u6d88\u8017\uff0c\u4e00\u5f00\u59cb\u662f450M\u5de6\u53f3\uff0c\u8dd1\u5230\u4e2d\u6bb5\u662f685M\uff0c\u6700\u540e\u662f772M\u3002\u5176\u4e2d\u7ecf\u5386\u4e8615\u4e07\u6b21\u8bf7\u6c42\u3002\u4e4b\u540e\u8ba1\u7b97\u5e73\u5747\u6bcf\u8bf7\u6c42\u548c\u5e94\u6709\u7684\u5dee\u5f02\uff0c\u4ee5\u786e\u8bc1memoryleak\uff1b\u8fc7\u4e86\u5341\u51e0\u5206\u949f\u53c8\u4e0b\u6765\u4e86\u4e00\u4e9b\uff0c\u770b\u4e0a\u53bb\u662f\u56e0\u4e3agc\u6162\u6162\u4e0b\u6765\u4e86\u2026"),(0,l.yg)("li",{parentName:"ul"},"\u81f3\u5c11\u5b58\u6d3b\u4e86\u2026"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Dump \u65e5\u5fd7\u8fdb\u884c\u5206\u6790\uff1a"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"json \u5168\u5e8f\u5217\u5316\u7684\u5927\u5c0f\u53ea\u670916MB\uff0c\u8fd9\u4e48\u770b\u6765\u663e\u7136memoryleak\u4e86\uff08")))),(0,l.yg)("h1",{id:"monitor-and-debug"},"Monitor and Debug"),(0,l.yg)("p",null,"Use golang ",(0,l.yg)("inlineCode",{parentName:"p"},"runtime")," to inspect usage and goroutine leak for golang."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Memory allocation and GC."),(0,l.yg)("li",{parentName:"ul"},"Goroutine statistics."),(0,l.yg)("li",{parentName:"ul"},"File descriptor.")),(0,l.yg)("h2",{id:"system-side"},"System side"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"# system\nsudo systemctl status ipmanager.service\n")),(0,l.yg)("p",null,"\u6682\u65f6\u5730\u89c2\u5bdffd\uff0c\u53ef\u4ee5\u7528\uff1a"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"sudo lsof -a -p <PID>\n")),(0,l.yg)("p",null,"\u53ef\u7528\u4e8e\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u88ab\u6b63\u5e38\u5173\u95ed\u3002"),(0,l.yg)("h2",{id:"runtime-perf"},"Runtime perf"),(0,l.yg)("p",null,"runtime provides:"),(0,l.yg)("p",null,"To Enable"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"# pprof \n(go tool )pprof -http=:9099 <http://10.76.8.19:9091/debug/pprof>\n")),(0,l.yg)("h2",{id:"coredump"},"CoreDump"),(0,l.yg)("p",null,"To enable core dump, set limit:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"ulimit -a # system limitation of system resources.\nulimit -S -c unlimited #\nulimit -S -c 1073741824 # 1G (by default in B)\n")),(0,l.yg)("p",null,"To trigger coredump manually:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"kill -s SIGSEGV <PID>\n")),(0,l.yg)("p",null,"<","aside",">"," \ud83d\udc49 Note: ",(0,l.yg)("inlineCode",{parentName:"p"},"Systemctl")," service produced no coredump by default. Rather than ",(0,l.yg)("inlineCode",{parentName:"p"},"ulimit"),", ",(0,l.yg)("inlineCode",{parentName:"p"},"LimitCORE")," needs to be set. Refer to:"),(0,l.yg)("p",null,"<","/aside",">"),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://www.freedesktop.org/software/systemd/man/systemd.exec.html#Process%20Properties"},"systemd.exec")),(0,l.yg)("p",null,"Or, you can produce coredump with gdb:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gdb -p <pid>\ngcore\n")),(0,l.yg)("p",null,"Download from origin: (1G)."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Including different ",(0,l.yg)("inlineCode",{parentName:"li"},".so")," files\u2026")),(0,l.yg)("h1",{id:"debug"},"Debug"),(0,l.yg)("p",null,"<","aside",">"," \ud83d\udc49 You can\u2019t use a blocking function in goroutine if you can\u2019t guarantee it\u2019s safe\u2026 You can\u2019t break goroutine from outside, and you can\u2019t use signal to stop the blocking function. You can only rewrite them."),(0,l.yg)("p",null,"<","/aside",">"),(0,l.yg)("p",null,"The ",(0,l.yg)("inlineCode",{parentName:"p"},"io")," package has provided primitives of ",(0,l.yg)("inlineCode",{parentName:"p"},"io"),", hiding the complexity of tcp protocol. You are actually reading from and writing to a stream."),(0,l.yg)("p",null,"But from this, you are limited to its implementation without timeout. Custom ",(0,l.yg)("inlineCode",{parentName:"p"},"CopyWithTimeout")," needs to be implemented."),(0,l.yg)("h2",{id:"io-streaming-reader"},(0,l.yg)("inlineCode",{parentName:"h2"},"io"),": Streaming Reader"),(0,l.yg)("p",null,"Golang provides ",(0,l.yg)("inlineCode",{parentName:"p"},"io")," as the primitives managing reading and writing. The object implementing these interfaces may comes from different systems."),(0,l.yg)("p",null,"There are several featured functions:"),(0,l.yg)("h3",{id:"iocopy"},(0,l.yg)("inlineCode",{parentName:"h3"},"io.Copy()")),(0,l.yg)("p",null,"Try to call ",(0,l.yg)("inlineCode",{parentName:"p"},"ReadFrom")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"WriteTo()")),(0,l.yg)("p",null,"If none, try to allocate a buffer and use for copying."),(0,l.yg)("p",null,"Promotion:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"io.CopyWithBuffer"),": Use provided buffer."),(0,l.yg)("li",{parentName:"ul"},"Use ",(0,l.yg)("inlineCode",{parentName:"li"},"bufio")," for buffered ",(0,l.yg)("inlineCode",{parentName:"li"},"io")," reading and writing. More featured methods and much more efficient for small ",(0,l.yg)("inlineCode",{parentName:"li"},"io"),"reading.")),(0,l.yg)("p",null,"Drawbacks:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Blocking. No interrupt allowed. So you can\u2019t use it with clock.")),(0,l.yg)("h1",{id:"tcp-proxy-from-byte-to-byte"},"TCP Proxy: From byte to byte"),(0,l.yg)("hr",null),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/NG3f-KkjtJBTVdRHQKLXOg"},"Go\u7ecf\u5178\u963b\u585e\u5f0fTCP\u534f\u8bae\u6d41\u89e3\u6790\u7684\u5b9e\u8df5")),(0,l.yg)("h1",{id:"ab-test-with-nginx"},"AB Test with ",(0,l.yg)("inlineCode",{parentName:"h1"},"nginx")),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"nginx")," split client."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},'split_clients "${remote_addr}AAA" $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  "";\n}\n')),(0,l.yg)("p",null,"Used for A/B Testing. Tracing log to show split? (Add header and Log.)"),(0,l.yg)("h2",{id:"todos"},"TODOS"),(0,l.yg)("p",null,"More flexible IP log fetching."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Streaming huge json objects. (Over 16M).")),(0,l.yg)("p",null,"Refer to benthos source code for overview of streaming:"),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://github.com/benthosdev/benthos"},"https://github.com/benthosdev/benthos")),(0,l.yg)("p",null,"Debug under pressure."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Analyze core-dump !!!"),(0,l.yg)("li",{parentName:"ul"},"Analyze with go perfing !!!")),(0,l.yg)("p",null,"Inspect and track from systemctl."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"More precise usage?")),(0,l.yg)("h1",{id:"\u8e29\u5751\u8bb0\u5f55"},"\u8e29\u5751\u8bb0\u5f55"),(0,l.yg)("p",null,"Channel and goroutine"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},'func Proxy(src net.Conn){\n        var d string\n        if config.C.Debug {\n                // TODO: Configurable load balancing: Marking upstream and set upstream by hand.\n                d = "127.0.0.1:19106"\n        } else {\n                d = LoadBalance()\n        }\n\n        dst, err := net.DialTimeout("tcp", d, time.Duration(config.C.DialTimeOut)*time.Second)\n\n        if err != nil {\n                fmt.Println("dial failure to service detected: " + err.Error())\n                // TODO Send back timeout info.\n                src.Write([]byte("HTTP/1.1 502 Bad Gateway\\\\n\\\\r[PROXY RESENDING ERROR FROM UPSTREAM:]\\\\n\\\\r" + err.Error() + "\\\\n"))\n                src.Close()\n                return\n        }\n\n        if Gate(src) != nil {\n                fmt.Println("Gate.")\n                return\n        }\n\n        done := make(chan struct{})\n        // To make a duplex channel, you may need two goroutines.\n        // Copy is streaming. It returns when EOF reaches.\n\n        defer func() {\n                dst.Close()\n                src.Close()\n        }()\n\n        go func() {\n                io.Copy(dst, src)\n                done <- struct{}{}\n        }()\n        go func() {\n                io.Copy(src, dst)\n                done <- struct{}{}\n        }()\n\n        select {\n        case <-done:\n                return\n        case <-time.After(time.Duration(config.C.MaxConnectionTimeout) * time.Second):\n                fmt.Println("Connection timeout.")\n                src.Write([]byte(TimeOut))\n                dst.Write([]byte(TimeOut))\n        }\n        // Either side connection close would cause "defer: Send EOF and close connection."\n}\n')),(0,l.yg)("p",null,"<","aside",">"," \ud83d\udc49 This is problematic code, causing memory leak. Can you see what\u2019s the problem?"),(0,l.yg)("p",null,"<","/aside",">"),(0,l.yg)("p",null,"Goroutine probe:"),(0,l.yg)("p",null,"\u2026Oh.. ",(0,l.yg)("inlineCode",{parentName:"p"},"proxy()")," Not released\u2026"),(0,l.yg)("p",null,"These two points where memory leaks:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"go func() {\n                io.Copy(*dst, *src)\n                done <- struct{}{}\n}()\ngo func() {\n                io.Copy(*src, *dst)\n                done <- struct{}{}\n}()\n")),(0,l.yg)("p",null,"One ",(0,l.yg)("inlineCode",{parentName:"p"},"goroutine")," exited but another didn\u2019t."),(0,l.yg)("p",null,"I thought:"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"When ",(0,l.yg)("inlineCode",{parentName:"p"},"dst")," sends it data and EOF, the last ",(0,l.yg)("inlineCode",{parentName:"p"},"goroutine")," would exit and send through \u201cdone\u201d channel to main thread. But the another side just close the connection but not sending back EOF. That\u2019s causing ",(0,l.yg)("inlineCode",{parentName:"p"},"io.Copy()"),"blocking.")),(0,l.yg)("p",null,"But file descriptor closed, can\u2019t that cause ",(0,l.yg)("inlineCode",{parentName:"p"},"io.Copy")," returning?"),(0,l.yg)("p",null,"That\u2019s not true. For:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Goroutine can\u2019t be interrupt outside. That means we can\u2019t set a timeout and break the blocked ",(0,l.yg)("inlineCode",{parentName:"li"},"io.Copy"),". If file descriptor closing can\u2019t lead to ",(0,l.yg)("inlineCode",{parentName:"li"},"io.Copy")," to return, that\u2019s making it a leaked goroutine, just like here. Designer can\u2019t be making things so stupid."),(0,l.yg)("li",{parentName:"ul"},"Besides EOF reaches, errors happening could also cause ",(0,l.yg)("inlineCode",{parentName:"li"},"io.Copy")," to return. As doc mentioned it.")),(0,l.yg)("p",null,"<","aside",">"," \ud83d\udc49 Just\u2026 Read documentation with care\u2026"),(0,l.yg)("p",null,"<","/aside",">"),(0,l.yg)("p",null,"So what\u2019s happening here?"),(0,l.yg)("p",null,"This is a working solution:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'defer func() {\n                (*dst).Close()\n                (*src).Close()\n        }()\n\n        go func() {\n                if _, err := io.Copy(*dst, *src); err != nil {\n                        return\n                }\n                done <- struct{}{}\n        }()\n        go func() {\n                if _, err := io.Copy(*src, *dst); err != nil {\n                        return\n                }\n                done <- struct{}{}\n        }()\n\n        select {\n        case <-done:\n                return\n        case <-time.After(p.timeOut):\n                //fmt.Println("Connection timeout.")\n                (*src).Write([]byte(p.timeOutErr.Error()))\n                (*dst).Write([]byte(p.timeOutErr.Error()))\n                return\n        }\n')),(0,l.yg)("p",null,"TODO: What\u2019s the precise behavior of channel?"),(0,l.yg)("p",null,"TODO: more about golang GC."))}y.isMDXComponent=!0}}]);